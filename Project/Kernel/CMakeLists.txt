SET(KERNEL_DIR
	"${PROJECT_SOURCE_DIR}/Kernel"
)
SET( KERNEL
	"${KERNEL_DIR}/main.cpp"
	"${KERNEL_DIR}/Kernel.h"
	"${KERNEL_DIR}/Kernel.cpp"
)

SET(KERNEL_INTERFACE_DIR
	"${KERNEL_DIR}/Interface"
)
SET(KERNEL_INTERFACE
	"${KERNEL_INTERFACE_DIR}/IApplication.h"
	"${KERNEL_INTERFACE_DIR}/ICore.h"
	"${KERNEL_INTERFACE_DIR}/ILogger.h"
	"${KERNEL_INTERFACE_DIR}/IConfigmgr.h"
)
SET(KERNEL_LOG_DIR	"${KERNEL_DIR}/Log")
SET(KERNEL_LOG
	"${KERNEL_LOG_DIR}/LogFile.h"
	"${KERNEL_LOG_DIR}/LogFile.cpp"
	"${KERNEL_LOG_DIR}/Logger.h"
	"${KERNEL_LOG_DIR}/Logger.cpp"
)

SET(KERNEL_CONFIG_DIR	"${KERNEL_DIR}/Config")
SET(KERNEL_CONFIG
	"${KERNEL_CONFIG_DIR}/Configmgr.cpp"
	"${KERNEL_CONFIG_DIR}/Configmgr.h"
)

SET(TEST_DIR "${KERNEL_DIR}/Test")
SET(TEST
	"${TEST_DIR}/Test.cpp"
	"${TEST_DIR}/Test.h"
)

IF(WIN32)
	INCLUDE_DIRECTORIES(
		${API_DIR}
		${PUBLIC_DIR}
		${KERNEL_INTERFACE_DIR}
		${KERNEL_LOG_DIR}
		${THIRD_LIBRARIES_INCLUDE_DIR}/DbgHelp.h
		${KERNEL_CONFIG_DIR}
        ${2D_DIR}
		${COMMON_TIME_DIR}
		${TINYXML_DIR}
	)
ENDIF(WIN32)

IF(LINUX)
	INCLUDE_DIRECTORIES(
                ${API_DIR}
                ${PUBLIC_DIR}
                ${KERNEL_INTERFACE_DIR}
                ${KERNEL_LOG_DIR}
                ${KERNEL_CONFIG_DIR}
        )
ENDIF(LINUX)
MESSAGE("test")
MESSAGE(STATUS ${COMMON_TIME})
SOURCE_GROUP( Api	FILES ${API})
SOURCE_GROUP( Public\\Tinyxml FILES ${TINYXML})
SOURCE_GROUP(Public\\2D FILES ${2D})
SOURCE_GROUP(Public\\time FILES ${COMMON_TIME})
SOURCE_GROUP( Public FILES ${PUBLIC})
SOURCE_GROUP( Src\\Interface FILES ${KERNEL_INTERFACE})
SOURCE_GROUP( Src\\Log FILES ${KERNEL_LOG})
SOURCE_GROUP( Src\\Config FILES ${KERNEL_CONFIG})
SOURCE_GROUP( Src\\Test FILES ${TEST})
SOURCE_GROUP( Src FILES ${KERNEL})


IF(WIN32)
	SET(THIRD_LIB_DEBUG
	"${THIRD_LIBRARIES_DEBUG_DIR}/DbgHelp.Lib"
	)
	SET(THIRD_LIB_RELEASE
	)
ENDIF(WIN32)

IF(LINUX)

ENDIF(LINUX)

ADD_EXECUTABLE( NetGrid
				${PUBLIC}
				${API}
				${KERNEL_INTERFACE}
				${KERNEL_LOG}
				${KERNEL}
				${TINYXML}
                ${2D}
				${COMMON_TIME}
				${KERNEL_CONFIG}
				${TEST}
)

IF(WIN32)
	SET(EXECUTABLE_OUTPUT_PATH "${PROJECT_BINARY_DIR}/windows/")
ENDIF(WIN32)
IF(LINUX)
	SET(EXECUTABLE_OUTPUT_PATH "${PROJECT_BINARY_DIR}/linux/")
ENDIF(LINUX)

TARGET_LINK_LIBRARIES(	NetGrid
	${THIRD_LIB_DEBUG}
	${THIRD_LIB_RELEASE}
)
